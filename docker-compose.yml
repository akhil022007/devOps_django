 version: '3.8'

 services:
 db:
    image: postgres:13
    container_name: mydjango_db
    environment:
      POSTGRES_DB: ${DB_NAME:-mydjangoappdb}
      POSTGRES_USER: ${DB_USER:-mydjangoappuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mydjangoapppassword}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mydjangoappuser} -d ${DB_NAME:-mydjangoappdb}"]
      interval: 5s
      timeout: 5s
      retries: 5

 web:
    build: .
    container_name: mydjango_web
    # CRITICAL CHANGE: Explicitly set environment variables within the command string
    command: >
      sh -c "
      DJANGO_SECRET_KEY='${DJANGO_SECRET_KEY}' \
      DB_NAME='${DB_NAME}' \
      DB_USER='${DB_USER}' \
      DB_PASSWORD='${DB_PASSWORD}' \
      DB_HOST='db' \
      DB_PORT='5432' \
      DJANGO_ALLOWED_HOSTS='${DJANGO_ALLOWED_HOSTS}' \
      DJANGO_DEBUG='${DJANGO_DEBUG}' \
      /usr/local/bin/python /app/manage.py wait_for_db && \
      DJANGO_SECRET_KEY='${DJANGO_SECRET_KEY}' \
      DB_NAME='${DB_NAME}' \
      DB_USER='${DB_USER}' \
      DB_PASSWORD='${DB_PASSWORD}' \
      DB_HOST='db' \
      DB_PORT='5432' \
      DJANGO_ALLOWED_HOSTS='${DJANGO_ALLOWED_HOSTS}' \
      DJANGO_DEBUG='${DJANGO_DEBUG}' \
      /usr/local/bin/python /app/manage.py migrate --noinput && \
      DJANGO_SECRET_KEY='${DJANGO_SECRET_KEY}' \
      DB_NAME='${DB_NAME}' \
      DB_USER='${DB_USER}' \
      DB_PASSWORD='${DB_PASSWORD}' \
      DB_HOST='db' \
      DB_PORT='5432' \
      DJANGO_ALLOWED_HOSTS='${DJANGO_ALLOWED_HOSTS}' \
      DJANGO_DEBUG='${DJANGO_DEBUG}' \
      /usr/local/bin/python /app/manage.py collectstatic --noinput && \
      DJANGO_SECRET_KEY='${DJANGO_SECRET_KEY}' \
      DB_NAME='${DB_NAME}' \
      DB_USER='${DB_USER}' \
      DB_PASSWORD='${DB_PASSWORD}' \
      DB_HOST='db' \
      DB_PORT='5432' \
      DJANGO_ALLOWED_HOSTS='${DJANGO_ALLOWED_HOSTS}' \
      DJANGO_DEBUG='${DJANGO_DEBUG}' \
      /usr/local/bin/python /app/manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    # No 'environment' section here. Variables are passed directly in the command.
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

 volumes:
    db_data:
